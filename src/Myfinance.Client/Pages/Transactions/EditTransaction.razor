@page "/transactions/edit/{Id:guid}"
@inject HttpClient Http
@inject NavigationManager Nav

<h3>Editar Transaccion</h3>

@if (model is null)
{
    <p><em>Cargando.</em></p>
}
else
{
    <EditForm Model="model" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3">
            <label>Fecha</label>
            <InputDate @bind-Value="model.Date" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Categoria</label>
            <InputSelect @bind-Value="model.Category" class="form-control">
                <option value="Income">Ingreso</option>
                <option value="Expense">Gasto</option>
            </InputSelect>
        </div>
        <div class="mb-3">
            <label>Monto</label>
            <InputNumber @bind-Value="model.Amount" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Actualizar</button>
        <button type="button" class="btn btn-secondary" @onclick="GoBack">Cancelar</button>
    </EditForm>
}
@code {
    [Parameter] public Guid Id { get; set; }

    TransactionDto? model;

    protected override async Task OnInitializedAsync()
    {
        model = await Http.GetFromJsonAsync<TransactionDto>($"api/transactions/{Id}");
    }

    async Task HandleValidSubmit()
    {
        await Http.PutAsJsonAsync($"api/transactions/{Id}", model);
        Nav.NavigateTo("/transactions");
    }
    void GoBack() => Nav.NavigateTo("/transactions");
}
