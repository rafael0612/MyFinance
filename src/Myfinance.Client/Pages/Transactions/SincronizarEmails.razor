@page "/sincronizar-emails"
@using MyFinance.Shared.DTOs
@inject HttpClient Http

<h3>Sincronizar transacciones desde correo</h3>

<button class="btn btn-primary" @onclick="SincronizarCorreos" disabled="@Enviando">
    @(Enviando ? "Sincronizando..." : "Sincronizar ahora")
</button>

@if (Enviando)
{
    <div class="mt-3">
        <span class="spinner-border spinner-border-sm" role="status"></span> Procesando...
    </div>
}

@if (!string.IsNullOrEmpty(Mensaje))
{
    <div class="alert @(Exito ? "alert-success" : "alert-danger") mt-3">@Mensaje</div>
}

@if (Transacciones?.Any() == true)
{
    <h5 class="mt-4">Transacciones importadas:</h5>
    <table class="table table-sm table-striped">
        <thead>
            <tr>
                <th>Fecha</th>
                <th>Monto</th>
                <th>Descripción</th>
                <th>Remitente</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var t in Transacciones)
            {
                <tr>
                    <td>@t.Date.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>@t.Amount.ToString("C")</td>
                    <td>@t.Description</td>
                    <td>@t.Sender</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    bool Enviando = false;
    string? Mensaje;
    bool Exito = false;

    List<ParsedEmailTransactionDto> Transacciones = new();
    async Task SincronizarCorreos()
    {
        Mensaje = string.Empty;
        Exito = false;
        Transacciones.Clear();
        Enviando = true;

        try
        {
            var response = await Http.PostAsync("api/emailimport/import-emails", null);
            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                var result = System.Text.Json.JsonSerializer.Deserialize<EmailImportResponse>(json,
                    new System.Text.Json.JsonSerializerOptions { PropertyNameCaseInsensitive = true });

                if (result != null && result.TransaccionesEmail!.Any())
                {
                    Transacciones = result?.TransaccionesEmail ?? new();
                    Mensaje = $"¡Sincronización exitosa! Se importaron {result?.TransaccionesEmail!.Count} transacciones.";
                    Exito = true;
                }
                else
                {
                    Mensaje = "Sincronización exitosa, pero no se encontraron nuevas transacciones en tu correo.";
                    Exito = true;
                }
            }
            else
            {
                var errorMsg = await response.Content.ReadAsStringAsync();
                Mensaje = $"Error en la sincronización: {errorMsg}";
                Exito = false;
            }
        }
        catch (Exception ex)
        {
            Mensaje = $"Error inesperado: {ex.Message}";
            Exito = false;
        }
        finally
        {
            Enviando = false;
        }
    }
}